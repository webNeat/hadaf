name: Release

on:
  push:
    branches: [main]

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release-packages:
    name: Release packages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - run: bun install
      - run: bun run changeset status --since=origin/main --output=changeset.json
      - run: jq -e '.releases|length>0' changeset.json
        id: has_releases
        continue-on-error: true
      - name: Create release PR / publish to npm
        if: steps.has_releases.outcome == 'success'
        uses: changesets/action@v1
        with:
          publish: bun run changeset publish
          commit: "Release ${{ steps.changesets.outputs.publishedPackages[0].version }}"
          title: "Release ${{ steps.changesets.outputs.publishedPackages[0].version }}"
          createGithubReleases: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  release-extensions:
    name: Release extensions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - run: bun install
      - run: bun run --filter "./packages/*" build
      - name: Publish to VS Marketplace
        working-directory: extensions/vscode
        run: bunx @vscode/vsce publish --pat "$VS_MARKETPLACE_TOKEN" --skip-duplicate --no-dependencies
        env:
          VS_MARKETPLACE_TOKEN: ${{ secrets.VS_MARKETPLACE_TOKEN }}
      - name: Publish to Open VSX
        working-directory: extensions/vscode
        run: bunx ovsx publish -p "$OPEN_VSX_TOKEN" --skip-duplicate --no-dependencies
        env:
          OPEN_VSX_TOKEN: ${{ secrets.OPEN_VSX_TOKEN }}
